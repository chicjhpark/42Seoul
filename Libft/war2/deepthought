= Host-specific information ====================================================
$> hostname; uname -msr
c3r6s6.42seoul.kr
Darwin 18.7.0 x86_64
$> date
Thu Nov 19 23:08:54 KST 2020
$> gcc --version
Apple LLVM version 10.0.1 (clang-1001.0.46.4)
Target: x86_64-apple-darwin18.7.0
Thread model: posix
InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
$> clang --version
Apple LLVM version 10.0.1 (clang-1001.0.46.4)
Target: x86_64-apple-darwin18.7.0
Thread model: posix
InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin

= libft.h=======================================================================
$> norminette libft.h | grep -E '(Error|Warning)'
Error (line 20): comment not well formatted
Error (line 60): comment not well formatted
Norme check failed

= Compiling libft ==============================================================
$> make re
rm -f ft_memset.o ft_bzero.o ft_memcpy.o ft_memccpy.o ft_memmove.o ft_memchr.o ft_memcmp.o ft_strlen.o ft_strlcpy.o ft_strlcat.o ft_strchr.o ft_strrchr.o ft_strnstr.o ft_strncmp.o ft_atoi.o ft_isalpha.o ft_isdigit.o ft_isalnum.o ft_isascii.o ft_isprint.o ft_toupper.o ft_tolower.o ft_calloc.o ft_strdup.o ft_substr.o ft_strjoin.o ft_strtrim.o ft_split.o ft_itoa.o ft_strmapi.o ft_putchar_fd.o ft_putstr_fd.o ft_putendl_fd.o ft_putnbr_fd.o
rm -f libft.a
gcc -Wall -Wextra -Werror -c ft_memset.c
gcc -Wall -Wextra -Werror -c ft_bzero.c
gcc -Wall -Wextra -Werror -c ft_memcpy.c
gcc -Wall -Wextra -Werror -c ft_memccpy.c
gcc -Wall -Wextra -Werror -c ft_memmove.c
gcc -Wall -Wextra -Werror -c ft_memchr.c
gcc -Wall -Wextra -Werror -c ft_memcmp.c
gcc -Wall -Wextra -Werror -c ft_strlen.c
gcc -Wall -Wextra -Werror -c ft_strlcpy.c
gcc -Wall -Wextra -Werror -c ft_strlcat.c
gcc -Wall -Wextra -Werror -c ft_strchr.c
gcc -Wall -Wextra -Werror -c ft_strrchr.c
gcc -Wall -Wextra -Werror -c ft_strnstr.c
gcc -Wall -Wextra -Werror -c ft_strncmp.c
gcc -Wall -Wextra -Werror -c ft_atoi.c
gcc -Wall -Wextra -Werror -c ft_isalpha.c
gcc -Wall -Wextra -Werror -c ft_isdigit.c
gcc -Wall -Wextra -Werror -c ft_isalnum.c
gcc -Wall -Wextra -Werror -c ft_isascii.c
gcc -Wall -Wextra -Werror -c ft_isprint.c
gcc -Wall -Wextra -Werror -c ft_toupper.c
gcc -Wall -Wextra -Werror -c ft_tolower.c
gcc -Wall -Wextra -Werror -c ft_calloc.c
gcc -Wall -Wextra -Werror -c ft_strdup.c
gcc -Wall -Wextra -Werror -c ft_substr.c
gcc -Wall -Wextra -Werror -c ft_strjoin.c
gcc -Wall -Wextra -Werror -c ft_strtrim.c
gcc -Wall -Wextra -Werror -c ft_split.c
gcc -Wall -Wextra -Werror -c ft_itoa.c
gcc -Wall -Wextra -Werror -c ft_strmapi.c
gcc -Wall -Wextra -Werror -c ft_putchar_fd.c
gcc -Wall -Wextra -Werror -c ft_putstr_fd.c
gcc -Wall -Wextra -Werror -c ft_putendl_fd.c
gcc -Wall -Wextra -Werror -c ft_putnbr_fd.c
ar rc libft.a ft_memset.o ft_bzero.o ft_memcpy.o ft_memccpy.o ft_memmove.o ft_memchr.o ft_memcmp.o ft_strlen.o ft_strlcpy.o ft_strlcat.o ft_strchr.o ft_strrchr.o ft_strnstr.o ft_strncmp.o ft_atoi.o ft_isalpha.o ft_isdigit.o ft_isalnum.o ft_isascii.o ft_isprint.o ft_toupper.o ft_tolower.o ft_calloc.o ft_strdup.o ft_substr.o ft_strjoin.o ft_strtrim.o ft_split.o ft_itoa.o ft_strmapi.o ft_putchar_fd.o ft_putstr_fd.o ft_putendl_fd.o ft_putnbr_fd.o

$> ls -la libft.a
-rw-r--r--  1 jaehpark  2020_seoul  33256 Nov 19 23:08 /Users/jaehpark/42Seoul/Libft/war2/dirlibft/libft.a

= Part1_functions ==============================================================

= ft_memset.c ==================================================================
$> norminette ft_memset.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_memset.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D
= Test 2 ===================================================
$> ./user_exe 02
$> diff -U 3 user_output_test02 test02.output

Diff OK :D
= Test 3 ===================================================
$> ./user_exe 03
$> diff -U 3 user_output_test03 test03.output

Diff OK :D
= Test 4 ===================================================
$> ./user_exe 04
$> diff -U 3 user_output_test04 test04.output

Diff OK :D

= ft_bzero.c ===================================================================
$> norminette ft_bzero.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_bzero.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D
= Test 2 ===================================================
$> ./user_exe 02
$> diff -U 3 user_output_test02 test02.output

Diff OK :D

= ft_calloc.c ==================================================================
$> norminette ft_calloc.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_calloc.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D

= ft_memcpy.c ==================================================================
$> norminette ft_memcpy.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_memcpy.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D
= Test 2 ===================================================
$> ./user_exe 02
$> diff -U 3 user_output_test02 test02.output

Diff OK :D
= Test 3 ===================================================
$> ./user_exe 03
$> diff -U 3 user_output_test03 test03.output

Diff OK :D

= ft_memccpy.c =================================================================
$> norminette ft_memccpy.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_memccpy.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D
= Test 2 ===================================================
$> ./user_exe 02
$> diff -U 3 user_output_test02 test02.output

Diff OK :D
= Test 3 ===================================================
$> ./user_exe 03
$> diff -U 3 user_output_test03 test03.output

Diff OK :D
= Test 4 ===================================================
$> ./user_exe 04
$> diff -U 3 user_output_test04 test04.output

Diff OK :D

= ft_memmove.c =================================================================
$> norminette ft_memmove.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_memmove.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D
= Test 2 ===================================================
$> ./user_exe 02
$> diff -U 3 user_output_test02 test02.output

Diff OK :D
= Test 3 ===================================================
$> ./user_exe 03
$> diff -U 3 user_output_test03 test03.output

Diff OK :D
= Test 4 ===================================================
$> ./user_exe 04
$> diff -U 3 user_output_test04 test04.output

Diff OK :D
= Test 5 ===================================================
$> ./user_exe 05
$> diff -U 3 user_output_test05 test05.output

Diff OK :D

= ft_memchr.c ==================================================================
$> norminette ft_memchr.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_memchr.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D
= Test 2 ===================================================
$> ./user_exe 02
$> diff -U 3 user_output_test02 test02.output

Diff OK :D
= Test 3 ===================================================
$> ./user_exe 03
$> diff -U 3 user_output_test03 test03.output

Diff OK :D
= Test 4 ===================================================
$> ./user_exe 04
$> diff -U 3 user_output_test04 test04.output

Diff OK :D
= Test 5 ===================================================
$> ./user_exe 05
$> diff -U 3 user_output_test05 test05.output

Diff OK :D
= Test 6 ===================================================
$> ./user_exe 06
$> diff -U 3 user_output_test06 test06.output

Diff OK :D

= ft_memcmp.c ==================================================================
$> norminette ft_memcmp.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_memcmp.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D
= Test 2 ===================================================
$> ./user_exe 02
$> diff -U 3 user_output_test02 test02.output

Diff OK :D
= Test 3 ===================================================
$> ./user_exe 03
$> diff -U 3 user_output_test03 test03.output

Diff OK :D
= Test 4 ===================================================
$> ./user_exe 04
$> diff -U 3 user_output_test04 test04.output

Diff OK :D
= Test 5 ===================================================
$> ./user_exe 05
$> diff -U 3 user_output_test05 test05.output

Diff OK :D
= Test 6 ===================================================
$> ./user_exe 06
$> diff -U 3 user_output_test06 test06.output

Diff OK :D
= Test 7 ===================================================
$> ./user_exe 07
$> diff -U 3 user_output_test07 test07.output

Diff OK :D
= Test 8 ===================================================
$> ./user_exe 08
$> diff -U 3 user_output_test08 test08.output

Diff OK :D
= Test 9 ===================================================
$> ./user_exe 09
$> diff -U 3 user_output_test09 test09.output

Diff OK :D

= ft_strlen.c ==================================================================
$> norminette ft_strlen.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_strlen.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D
= Test 2 ===================================================
$> ./user_exe 02
$> diff -U 3 user_output_test02 test02.output

Diff OK :D
= Test 3 ===================================================
$> ./user_exe 03
$> diff -U 3 user_output_test03 test03.output

Diff OK :D
= Test 4 ===================================================
$> ./user_exe 04
$> diff -U 3 user_output_test04 test04.output

Diff OK :D
= Test 5 ===================================================
$> ./user_exe 05
$> diff -U 3 user_output_test05 test05.output

Diff OK :D
= Test 6 ===================================================
$> ./user_exe 06
$> diff -U 3 user_output_test06 test06.output

Diff OK :D

= ft_strdup.c ==================================================================
$> norminette ft_strdup.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_strdup.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D

= ft_strlcat.c =================================================================
$> norminette ft_strlcat.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_strlcat.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D
= Test 2 ===================================================
$> ./user_exe 02
$> diff -U 3 user_output_test02 test02.output

Diff OK :D
= Test 3 ===================================================
$> ./user_exe 03
$> diff -U 3 user_output_test03 test03.output

Diff OK :D
= Test 4 ===================================================
$> ./user_exe 04
$> diff -U 3 user_output_test04 test04.output

Diff OK :D
= Test 5 ===================================================
$> ./user_exe 05
$> diff -U 3 user_output_test05 test05.output

Diff OK :D
= Test 6 ===================================================
$> ./user_exe 06
$> diff -U 3 user_output_test06 test06.output

Diff OK :D
= Test 7 ===================================================
$> ./user_exe 07
$> diff -U 3 user_output_test07 test07.output

Diff OK :D
= Test 8 ===================================================
$> ./user_exe 08
$> diff -U 3 user_output_test08 test08.output

Diff OK :D
= Test 9 ===================================================
$> ./user_exe 09
$> diff -U 3 user_output_test09 test09.output

Diff OK :D

= ft_strlcpy.c =================================================================
$> norminette ft_strlcpy.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_strlcpy.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D
= Test 2 ===================================================
$> ./user_exe 02
$> diff -U 3 user_output_test02 test02.output

Diff OK :D
= Test 3 ===================================================
$> ./user_exe 03
$> diff -U 3 user_output_test03 test03.output

Diff OK :D
= Test 4 ===================================================
$> ./user_exe 04
$> diff -U 3 user_output_test04 test04.output

Diff OK :D
= Test 5 ===================================================
$> ./user_exe 05
$> diff -U 3 user_output_test05 test05.output

Diff OK :D

= ft_strchr.c ==================================================================
$> norminette ft_strchr.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_strchr.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D
= Test 2 ===================================================
$> ./user_exe 02
$> diff -U 3 user_output_test02 test02.output

Diff OK :D
= Test 3 ===================================================
$> ./user_exe 03
$> diff -U 3 user_output_test03 test03.output

Diff OK :D
= Test 4 ===================================================
$> ./user_exe 04
$> diff -U 3 user_output_test04 test04.output

Diff OK :D
= Test 5 ===================================================
$> ./user_exe 05
$> diff -U 3 user_output_test05 test05.output

Diff OK :D
= Test 6 ===================================================
$> ./user_exe 06
$> diff -U 3 user_output_test06 test06.output

Diff OK :D

= ft_strrchr.c =================================================================
$> norminette ft_strrchr.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_strrchr.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D
= Test 2 ===================================================
$> ./user_exe 02
$> diff -U 3 user_output_test02 test02.output

Diff OK :D
= Test 3 ===================================================
$> ./user_exe 03
$> diff -U 3 user_output_test03 test03.output

Diff OK :D
= Test 4 ===================================================
$> ./user_exe 04
$> diff -U 3 user_output_test04 test04.output

Diff OK :D
= Test 5 ===================================================
$> ./user_exe 05
$> diff -U 3 user_output_test05 test05.output

Diff OK :D
= Test 6 ===================================================
$> ./user_exe 06
$> diff -U 3 user_output_test06 test06.output

Diff OK :D
= Test 7 ===================================================
$> ./user_exe 07
$> diff -U 3 user_output_test07 test07.output

Diff OK :D
= Test 8 ===================================================
$> ./user_exe 08
$> diff -U 3 user_output_test08 test08.output

Diff OK :D

= ft_strnstr.c =================================================================
$> norminette ft_strnstr.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_strnstr.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D
= Test 2 ===================================================
$> ./user_exe 02
$> diff -U 3 user_output_test02 test02.output

Diff OK :D
= Test 3 ===================================================
$> ./user_exe 03
$> diff -U 3 user_output_test03 test03.output

Diff OK :D
= Test 4 ===================================================
$> ./user_exe 04
$> diff -U 3 user_output_test04 test04.output

Diff OK :D
= Test 5 ===================================================
$> ./user_exe 05
$> diff -U 3 user_output_test05 test05.output

Diff OK :D
= Test 6 ===================================================
$> ./user_exe 06
$> diff -U 3 user_output_test06 test06.output

Diff OK :D
= Test 7 ===================================================
$> ./user_exe 07
$> diff -U 3 user_output_test07 test07.output

Diff OK :D
= Test 8 ===================================================
$> ./user_exe 08
$> diff -U 3 user_output_test08 test08.output

Diff OK :D
= Test 9 ===================================================
$> ./user_exe 09
$> diff -U 3 user_output_test09 test09.output

Diff OK :D
= Test 10 ==================================================
$> ./user_exe 10
$> diff -U 3 user_output_test10 test10.output

Diff OK :D

= ft_strncmp.c =================================================================
$> norminette ft_strncmp.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_strncmp.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D
= Test 2 ===================================================
$> ./user_exe 02
$> diff -U 3 user_output_test02 test02.output

Diff OK :D
= Test 3 ===================================================
$> ./user_exe 03
$> diff -U 3 user_output_test03 test03.output

Diff OK :D
= Test 4 ===================================================
$> ./user_exe 04
$> diff -U 3 user_output_test04 test04.output

Diff OK :D
= Test 5 ===================================================
$> ./user_exe 05
$> diff -U 3 user_output_test05 test05.output

Diff OK :D
= Test 6 ===================================================
$> ./user_exe 06
$> diff -U 3 user_output_test06 test06.output

Diff OK :D
= Test 7 ===================================================
$> ./user_exe 07
$> diff -U 3 user_output_test07 test07.output

Diff OK :D
= Test 8 ===================================================
$> ./user_exe 08
$> diff -U 3 user_output_test08 test08.output

Diff OK :D
= Test 9 ===================================================
$> ./user_exe 09
$> diff -U 3 user_output_test09 test09.output

Diff OK :D
= Test 10 ==================================================
$> ./user_exe 10
$> diff -U 3 user_output_test10 test10.output

Diff OK :D
= Test 11 ==================================================
$> ./user_exe 11
$> diff -U 3 user_output_test11 test11.output

Diff OK :D

= ft_atoi.c ====================================================================
$> norminette ft_atoi.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_atoi.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D
= Test 2 ===================================================
$> ./user_exe 02
$> diff -U 3 user_output_test02 test02.output

Diff OK :D
= Test 3 ===================================================
$> ./user_exe 03
$> diff -U 3 user_output_test03 test03.output

Diff OK :D
= Test 4 ===================================================
$> ./user_exe 04
$> diff -U 3 user_output_test04 test04.output

Diff OK :D
= Test 5 ===================================================
$> ./user_exe 05
$> diff -U 3 user_output_test05 test05.output

Diff OK :D
= Test 6 ===================================================
$> ./user_exe 06
$> diff -U 3 user_output_test06 test06.output

Diff OK :D
= Test 7 ===================================================
$> ./user_exe 07
$> diff -U 3 user_output_test07 test07.output

Diff OK :D
= Test 8 ===================================================
$> ./user_exe 08
$> diff -U 3 user_output_test08 test08.output

Diff OK :D
= Test 9 ===================================================
$> ./user_exe 09
$> diff -U 3 user_output_test09 test09.output

Diff OK :D
= Test 10 ==================================================
$> ./user_exe 10
$> diff -U 3 user_output_test10 test10.output

Diff OK :D
= Test 11 ==================================================
$> ./user_exe 11
$> diff -U 3 user_output_test11 test11.output

Diff OK :D
= Test 12 ==================================================
$> ./user_exe 12
$> diff -U 3 user_output_test12 test12.output

Diff OK :D
= Test 13 ==================================================
$> ./user_exe 13
$> diff -U 3 user_output_test13 test13.output

Diff OK :D
= Test 14 ==================================================
$> ./user_exe 14
$> diff -U 3 user_output_test14 test14.output

Diff OK :D
= Test 15 ==================================================
$> ./user_exe 15
$> diff -U 3 user_output_test15 test15.output

Diff OK :D
= Test 16 ==================================================
$> ./user_exe 16
$> diff -U 3 user_output_test16 test16.output

Diff OK :D
= Test 17 ==================================================
$> ./user_exe 17
$> diff -U 3 user_output_test17 test17.output

Diff OK :D
= Test 18 ==================================================
$> ./user_exe 18
$> diff -U 3 user_output_test18 test18.output

Diff OK :D
= Test 19 ==================================================
$> ./user_exe 19
$> diff -U 3 user_output_test19 test19.output

Diff OK :D

= ft_isalpha.c =================================================================
$> norminette ft_isalpha.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_isalpha.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D
= Test 2 ===================================================
$> ./user_exe 02
$> diff -U 3 user_output_test02 test02.output

Diff OK :D
= Test 3 ===================================================
$> ./user_exe 03
$> diff -U 3 user_output_test03 test03.output

Diff OK :D
= Test 4 ===================================================
$> ./user_exe 04
$> diff -U 3 user_output_test04 test04.output

Diff OK :D
= Test 5 ===================================================
$> ./user_exe 05
$> diff -U 3 user_output_test05 test05.output

Diff OK :D
= Test 6 ===================================================
$> ./user_exe 06
$> diff -U 3 user_output_test06 test06.output

Diff OK :D
= Test 7 ===================================================
$> ./user_exe 07
$> diff -U 3 user_output_test07 test07.output

Diff OK :D

= ft_isdigit.c =================================================================
$> norminette ft_isdigit.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_isdigit.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D
= Test 2 ===================================================
$> ./user_exe 02
$> diff -U 3 user_output_test02 test02.output

Diff OK :D
= Test 3 ===================================================
$> ./user_exe 03
$> diff -U 3 user_output_test03 test03.output

Diff OK :D
= Test 4 ===================================================
$> ./user_exe 04
$> diff -U 3 user_output_test04 test04.output

Diff OK :D
= Test 5 ===================================================
$> ./user_exe 05
$> diff -U 3 user_output_test05 test05.output

Diff OK :D
= Test 6 ===================================================
$> ./user_exe 06
$> diff -U 3 user_output_test06 test06.output

Diff OK :D
= Test 7 ===================================================
$> ./user_exe 07
$> diff -U 3 user_output_test07 test07.output

Diff OK :D

= ft_isalnum.c =================================================================
$> norminette ft_isalnum.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_isalnum.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D
= Test 2 ===================================================
$> ./user_exe 02
$> diff -U 3 user_output_test02 test02.output

Diff OK :D
= Test 3 ===================================================
$> ./user_exe 03
$> diff -U 3 user_output_test03 test03.output

Diff OK :D
= Test 4 ===================================================
$> ./user_exe 04
$> diff -U 3 user_output_test04 test04.output

Diff OK :D
= Test 5 ===================================================
$> ./user_exe 05
$> diff -U 3 user_output_test05 test05.output

Diff OK :D
= Test 6 ===================================================
$> ./user_exe 06
$> diff -U 3 user_output_test06 test06.output

Diff OK :D
= Test 7 ===================================================
$> ./user_exe 07
$> diff -U 3 user_output_test07 test07.output

Diff OK :D

= ft_isascii.c =================================================================
$> norminette ft_isascii.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_isascii.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D
= Test 2 ===================================================
$> ./user_exe 02
$> diff -U 3 user_output_test02 test02.output

Diff OK :D
= Test 3 ===================================================
$> ./user_exe 03
$> diff -U 3 user_output_test03 test03.output

Diff OK :D
= Test 4 ===================================================
$> ./user_exe 04
$> diff -U 3 user_output_test04 test04.output

Diff OK :D
= Test 5 ===================================================
$> ./user_exe 05
$> diff -U 3 user_output_test05 test05.output

Diff OK :D
= Test 6 ===================================================
$> ./user_exe 06
$> diff -U 3 user_output_test06 test06.output

Diff OK :D
= Test 7 ===================================================
$> ./user_exe 07
$> diff -U 3 user_output_test07 test07.output

Diff OK :D
= Test 8 ===================================================
$> ./user_exe 08
$> diff -U 3 user_output_test08 test08.output

Diff OK :D

= ft_isprint.c =================================================================
$> norminette ft_isprint.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_isprint.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D
= Test 2 ===================================================
$> ./user_exe 02
$> diff -U 3 user_output_test02 test02.output

Diff OK :D
= Test 3 ===================================================
$> ./user_exe 03
$> diff -U 3 user_output_test03 test03.output

Diff OK :D
= Test 4 ===================================================
$> ./user_exe 04
$> diff -U 3 user_output_test04 test04.output

Diff OK :D
= Test 5 ===================================================
$> ./user_exe 05
$> diff -U 3 user_output_test05 test05.output

Diff OK :D
= Test 6 ===================================================
$> ./user_exe 06
$> diff -U 3 user_output_test06 test06.output

Diff OK :D
= Test 7 ===================================================
$> ./user_exe 07
$> diff -U 3 user_output_test07 test07.output

Diff OK :D

= ft_toupper.c =================================================================
$> norminette ft_toupper.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_toupper.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D
= Test 2 ===================================================
$> ./user_exe 02
$> diff -U 3 user_output_test02 test02.output

Diff OK :D
= Test 3 ===================================================
$> ./user_exe 03
$> diff -U 3 user_output_test03 test03.output

Diff OK :D
= Test 4 ===================================================
$> ./user_exe 04
$> diff -U 3 user_output_test04 test04.output

Diff OK :D
= Test 5 ===================================================
$> ./user_exe 05
$> diff -U 3 user_output_test05 test05.output

Diff OK :D
= Test 6 ===================================================
$> ./user_exe 06
$> diff -U 3 user_output_test06 test06.output

Diff OK :D
= Test 7 ===================================================
$> ./user_exe 07
$> diff -U 3 user_output_test07 test07.output

Diff OK :D

= ft_tolower.c =================================================================
$> norminette ft_tolower.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_tolower.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D
= Test 2 ===================================================
$> ./user_exe 02
$> diff -U 3 user_output_test02 test02.output

Diff OK :D
= Test 3 ===================================================
$> ./user_exe 03
$> diff -U 3 user_output_test03 test03.output

Diff OK :D
= Test 4 ===================================================
$> ./user_exe 04
$> diff -U 3 user_output_test04 test04.output

Diff OK :D
= Test 5 ===================================================
$> ./user_exe 05
$> diff -U 3 user_output_test05 test05.output

Diff OK :D
= Test 6 ===================================================
$> ./user_exe 06
$> diff -U 3 user_output_test06 test06.output

Diff OK :D
= Test 7 ===================================================
$> ./user_exe 07
$> diff -U 3 user_output_test07 test07.output

Diff OK :D

= Part2_functions ==============================================================

= ft_strmapi.c =================================================================
$> norminette ft_strmapi.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_strmapi.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
Command './user_exe 01' got killed by an Abort

= ft_substr.c ==================================================================
$> norminette ft_substr.c | grep -E '(Error|Warning)'
Error (line 15): declarations must be followed by one empty line in ft_substr
Error (line 20): spaces at the end of line
Norme check failed
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_substr.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D
= Test 2 ===================================================
$> ./user_exe 02
$> diff -U 3 user_output_test02 test02.output

Diff OK :D
= Test 3 ===================================================
$> ./user_exe 03
$> diff -U 3 user_output_test03 test03.output

Diff OK :D
= Test 4 ===================================================
$> ./user_exe 04
$> diff -U 3 user_output_test04 test04.output

Diff OK :D
= Test 5 ===================================================
$> ./user_exe 05
$> diff -U 3 user_output_test05 test05.output

Diff OK :D

= ft_strjoin.c =================================================================
$> norminette ft_strjoin.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_strjoin.c main.c libft.a -o user_exe

Forbidden function call in 'ft_strjoin.c':
U_strlen

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D
= Test 2 ===================================================
$> ./user_exe 02
$> diff -U 3 user_output_test02 test02.output

Diff OK :D
= Test 3 ===================================================
$> ./user_exe 03
$> diff -U 3 user_output_test03 test03.output

Diff OK :D
= Test 4 ===================================================
$> ./user_exe 04
$> diff -U 3 user_output_test04 test04.output

Diff OK :D

= ft_strtrim.c =================================================================
$> norminette ft_strtrim.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_strtrim.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D
= Test 2 ===================================================
$> ./user_exe 02
Command './user_exe 02' got killed by an Abort
= Test 3 ===================================================
$> ./user_exe 03
$> diff -U 3 user_output_test03 test03.output

Diff OK :D
= Test 4 ===================================================
$> ./user_exe 04
Command './user_exe 04' got killed by an Abort
= Test 5 ===================================================
$> ./user_exe 05
Command './user_exe 05' got killed by an Abort

= ft_split.c ===================================================================
$> norminette ft_split.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_split.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D
= Test 2 ===================================================
$> ./user_exe 02
$> diff -U 3 user_output_test02 test02.output
--- /Users/jaehpark/42Seoul/Libft/war2/tests/Part2_functions/ft_split/user_output_test02	2020-11-19 23:09:20.000000000 +0900$
+++ /Users/jaehpark/42Seoul/Libft/war2/tests/Part2_functions/ft_split/test02.output	2020-11-19 17:05:50.000000000 +0900$
@@ -9,3 +9,4 @@$
 Sed$
 non$
 risus.$
+Suspendisse$

Diff KO :(
= Test 3 ===================================================
$> ./user_exe 03
$> diff -U 3 user_output_test03 test03.output

Diff OK :D
= Test 4 ===================================================
$> ./user_exe 04
$> diff -U 3 user_output_test04 test04.output
--- /Users/jaehpark/42Seoul/Libft/war2/tests/Part2_functions/ft_split/user_output_test04	2020-11-19 23:09:20.000000000 +0900$
+++ /Users/jaehpark/42Seoul/Libft/war2/tests/Part2_functions/ft_split/test04.output	2020-11-19 17:05:50.000000000 +0900$
@@ -22,3 +22,4 @@$
 gula massa, var$
 us a, semper congue, eu$
 smod non, m$
+.$

Diff KO :(
= Test 5 ===================================================
$> ./user_exe 05
$> diff -U 3 user_output_test05 test05.output
--- /Users/jaehpark/42Seoul/Libft/war2/tests/Part2_functions/ft_split/user_output_test05	2020-11-19 23:09:20.000000000 +0900$
+++ /Users/jaehpark/42Seoul/Libft/war2/tests/Part2_functions/ft_split/test05.output	2020-11-19 17:05:50.000000000 +0900$
@@ -0,0 +1 @@$
+lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed non risus. Suspendisse lectus tortor, dignissim sit amet, adipiscing nec, ultricies sed, dolor. Cras elementum ultricies diam. Maecenas ligula massa, varius a, semper congue, euismod non, mi.$

Diff KO :(
= Test 6 ===================================================
$> ./user_exe 06
$> diff -U 3 user_output_test06 test06.output

Diff OK :D

= ft_itoa.c ====================================================================
$> norminette ft_itoa.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_itoa.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
Command './user_exe 01' got killed by an Abort
= Test 2 ===================================================
$> ./user_exe 02
$> diff -U 3 user_output_test02 test02.output

Diff OK :D
= Test 3 ===================================================
$> ./user_exe 03
$> diff -U 3 user_output_test03 test03.output

Diff OK :D
= Test 4 ===================================================
$> ./user_exe 04
$> diff -U 3 user_output_test04 test04.output

Diff OK :D
= Test 5 ===================================================
$> ./user_exe 05
$> diff -U 3 user_output_test05 test05.output

Diff OK :D
= Test 6 ===================================================
$> ./user_exe 06
$> diff -U 3 user_output_test06 test06.output

Diff OK :D
= Test 7 ===================================================
$> ./user_exe 07
$> diff -U 3 user_output_test07 test07.output

Diff OK :D
= Test 8 ===================================================
$> ./user_exe 08
$> diff -U 3 user_output_test08 test08.output

Diff OK :D
= Test 9 ===================================================
$> ./user_exe 09
$> diff -U 3 user_output_test09 test09.output

Diff OK :D
= Test 10 ==================================================
$> ./user_exe 10
$> diff -U 3 user_output_test10 test10.output

Diff OK :D

= ft_putchar_fd.c ==============================================================
$> norminette ft_putchar_fd.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_putchar_fd.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D
= Test 2 ===================================================
$> ./user_exe 02
$> diff -U 3 user_output_test02 test02.output

Diff OK :D
= Test 3 ===================================================
$> ./user_exe 03
$> diff -U 3 user_output_test03 test03.output

Diff OK :D
= Test 4 ===================================================
$> ./user_exe 04
$> diff -U 3 user_output_test04 test04.output

Diff OK :D
= Test 5 ===================================================
$> ./user_exe 05
$> diff -U 3 user_output_test05 test05.output

Diff OK :D
= Test 6 ===================================================
$> ./user_exe 06
$> diff -U 3 user_output_test06 test06.output

Diff OK :D
= Test 7 ===================================================
$> ./user_exe 07
$> diff -U 3 user_output_test07 test07.output

Diff OK :D

= ft_putstr_fd.c ===============================================================
$> norminette ft_putstr_fd.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_putstr_fd.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D
= Test 2 ===================================================
$> ./user_exe 02
$> diff -U 3 user_output_test02 test02.output

Diff OK :D
= Test 3 ===================================================
$> ./user_exe 03
$> diff -U 3 user_output_test03 test03.output

Diff OK :D
= Test 4 ===================================================
$> ./user_exe 04
$> diff -U 3 user_output_test04 test04.output

Diff OK :D

= ft_putendl_fd.c ==============================================================
$> norminette ft_putendl_fd.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_putendl_fd.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D
= Test 2 ===================================================
$> ./user_exe 02
$> diff -U 3 user_output_test02 test02.output

Diff OK :D
= Test 3 ===================================================
$> ./user_exe 03
$> diff -U 3 user_output_test03 test03.output

Diff OK :D
= Test 4 ===================================================
$> ./user_exe 04
$> diff -U 3 user_output_test04 test04.output

Diff OK :D

= ft_putnbr_fd.c ===============================================================
$> norminette ft_putnbr_fd.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_putnbr_fd.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D
= Test 2 ===================================================
$> ./user_exe 02
$> diff -U 3 user_output_test02 test02.output

Diff OK :D
= Test 3 ===================================================
$> ./user_exe 03
$> diff -U 3 user_output_test03 test03.output
--- /Users/jaehpark/42Seoul/Libft/war2/tests/Part2_functions/ft_putnbr_fd/user_output_test03	2020-11-19 23:09:24.000000000 +0900$
+++ /Users/jaehpark/42Seoul/Libft/war2/tests/Part2_functions/ft_putnbr_fd/test03.output	2020-11-19 17:05:50.000000000 +0900$
@@ -1 +1 @@$
--05$
\ No newline at end of file$
+-5$
\ No newline at end of file$

Diff KO :(
= Test 4 ===================================================
$> ./user_exe 04
$> diff -U 3 user_output_test04 test04.output

Diff OK :D
= Test 5 ===================================================
$> ./user_exe 05
$> diff -U 3 user_output_test05 test05.output

Diff OK :D
= Test 6 ===================================================
$> ./user_exe 06
$> diff -U 3 user_output_test06 test06.output

Diff OK :D
= Test 7 ===================================================
$> ./user_exe 07
$> diff -U 3 user_output_test07 test07.output

Diff OK :D
= Test 8 ===================================================
$> ./user_exe 08
$> diff -U 3 user_output_test08 test08.output

Diff OK :D
= Test 9 ===================================================
$> ./user_exe 09
$> diff -U 3 user_output_test09 test09.output

Diff OK :D

= Bonus_functions ==============================================================

= ft_lstnew.c ==================================================================
$> norminette ft_lstnew.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_lstnew.c main.c libft.a -o user_exe

/Users/jaehpark/42Seoul/Libft/war2/dirlibft//ft_lstnew.c:15:1: error: unknown type name 't_list'
t_list  *ft_lstnew(void *content)
^
/Users/jaehpark/42Seoul/Libft/war2/dirlibft//ft_lstnew.c:17:2: error: use of undeclared identifier 't_list'
        t_list  *new;
        ^
/Users/jaehpark/42Seoul/Libft/war2/dirlibft//ft_lstnew.c:17:10: error: use of undeclared identifier 'new'
        t_list  *new;
                 ^
/Users/jaehpark/42Seoul/Libft/war2/dirlibft//ft_lstnew.c:19:23: error: expected expression
        if (!(new = (t_list *)malloc(sizeof(t_list))))
                             ^
/Users/jaehpark/42Seoul/Libft/war2/dirlibft//ft_lstnew.c:19:15: error: use of undeclared identifier 't_list'
        if (!(new = (t_list *)malloc(sizeof(t_list))))
                     ^
/Users/jaehpark/42Seoul/Libft/war2/dirlibft//ft_lstnew.c:19:8: error: use of undeclared identifier 'new'
        if (!(new = (t_list *)malloc(sizeof(t_list))))
              ^
/Users/jaehpark/42Seoul/Libft/war2/dirlibft//ft_lstnew.c:21:2: error: use of undeclared identifier 'new'
        new->content = content;
        ^
/Users/jaehpark/42Seoul/Libft/war2/dirlibft//ft_lstnew.c:22:2: error: use of undeclared identifier 'new'
        new->next = NULL;
        ^
/Users/jaehpark/42Seoul/Libft/war2/dirlibft//ft_lstnew.c:23:10: error: use of undeclared identifier 'new'
        return (new);
                ^
9 errors generated.
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstnew/main.c:39:2: error: use of undeclared identifier 't_list'
        t_list          *elem;
        ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstnew/main.c:39:11: error: use of undeclared identifier 'elem'; did you mean 'else'?
        t_list          *elem;
                         ^~~~
                         else
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstnew/main.c:39:11: error: expected expression
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstnew/main.c:49:9: error: use of undeclared identifier 'elem'; did you mean 'enum'?
                if (!(elem = ft_lstnew(str)))
                      ^~~~
                      enum
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstnew/main.c:49:9: error: expected expression
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstnew/main.c:53:10: error: use of undeclared identifier 'elem'; did you mean 'enum'?
                        if (!(elem->content))
                              ^~~~
                              enum
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstnew/main.c:53:10: error: expected expression
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstnew/main.c:57:21: error: use of undeclared identifier 'elem'; did you mean 'else'?
                                ft_print_result(elem->content);
                                                ^~~~
                                                else
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstnew/main.c:57:21: error: expected expression
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstnew/main.c:59:10: error: use of undeclared identifier 'elem'; did you mean 'enum'?
                        if (!(elem->next))
                              ^~~~
                              enum
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstnew/main.c:59:10: error: expected expression
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstnew/main.c:71:9: error: use of undeclared identifier 'elem'; did you mean 'enum'?
                if (!(elem = ft_lstnew(&i)))
                      ^~~~
                      enum
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstnew/main.c:71:9: error: expected expression
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstnew/main.c:75:10: error: use of undeclared identifier 'elem'; did you mean 'enum'?
                        if (!(elem->content))
                              ^~~~
                              enum
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstnew/main.c:75:10: error: expected expression
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstnew/main.c:79:31: error: use of undeclared identifier 'elem'; did you mean 'else'?
                                ft_print_result2(*(int *)(elem->content));
                                                          ^~~~
                                                          else
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstnew/main.c:79:31: error: expected expression
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstnew/main.c:81:10: error: use of undeclared identifier 'elem'; did you mean 'enum'?
                        if (!(elem->next))
                              ^~~~
                              enum
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstnew/main.c:81:10: error: expected expression
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.

= ft_lstdelone.c ===============================================================
$> norminette ft_lstdelone.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_lstdelone.c main.c libft.a -o user_exe

/Users/jaehpark/42Seoul/Libft/war2/dirlibft//ft_lstdelone.c:15:19: error: unknown type name 't_list'
void    ft_lstdelone(t_list *lst, void (*del)(void *))
                     ^
1 error generated.
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstdelone/main.c:19:22: error: unknown type name 't_list'; did you mean 'va_list'?
void    ft_print_result(t_list *elem)
                        ^~~~~~
                        va_list
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/sys/_types/_va_list.h:32:26: note: 'va_list' declared here
typedef __darwin_va_list va_list;
                         ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstdelone/main.c:24:22: error: member reference base type 'va_list' (aka '__builtin_va_list') is not a structure or union
        while (((char *)elem->content)[len])
                        ~~~~^ ~~~~~~~
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstdelone/main.c:26:15: error: member reference base type 'va_list' (aka '__builtin_va_list') is not a structure or union
        write(1, elem->content, len);
                 ~~~~^ ~~~~~~~
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstdelone/main.c:34:1: error: unknown type name 't_list'; did you mean 'va_list'?
t_list  *ft_lstnewone(void const *content)
^~~~~~
va_list
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/sys/_types/_va_list.h:32:26: note: 'va_list' declared here
typedef __darwin_va_list va_list;
                         ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstdelone/main.c:36:2: error: unknown type name 't_list'; did you mean 'va_list'?
        t_list  *elem;
        ^~~~~~
        va_list
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/sys/_types/_va_list.h:32:26: note: 'va_list' declared here
typedef __darwin_va_list va_list;
                         ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstdelone/main.c:38:18: error: expected expression
        elem = (t_list *)malloc(sizeof(t_list));
                        ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstdelone/main.c:38:10: error: use of undeclared identifier 't_list'
        elem = (t_list *)malloc(sizeof(t_list));
                ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstdelone/main.c:43:7: error: member reference base type 'va_list' (aka '__builtin_va_list') is not a structure or union
                elem->content = NULL;
                ~~~~^ ~~~~~~~
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstdelone/main.c:47:13: error: member reference base type 'va_list' (aka '__builtin_va_list') is not a structure or union
                if (!(elem->content = malloc(sizeof(*(elem->content)) * sizeof(content))))
                      ~~~~^ ~~~~~~~
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstdelone/main.c:47:45: error: member reference base type 'va_list' (aka '__builtin_va_list') is not a structure or union
                if (!(elem->content = malloc(sizeof(*(elem->content)) * sizeof(content))))
                                                      ~~~~^ ~~~~~~~
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstdelone/main.c:52:7: error: member reference base type 'va_list' (aka '__builtin_va_list') is not a structure or union
                elem->content = memcpy(elem->content, content, sizeof(content));
                ~~~~^ ~~~~~~~
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstdelone/main.c:52:30: error: member reference base type 'va_list' (aka '__builtin_va_list') is not a structure or union
                elem->content = memcpy(elem->content, content, sizeof(content));
                                       ~~~~^ ~~~~~~~
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstdelone/main.c:54:6: error: member reference base type 'va_list' (aka '__builtin_va_list') is not a structure or union
        elem->next = NULL;
        ~~~~^ ~~~~
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstdelone/main.c:60:2: error: unknown type name 't_list'; did you mean 'va_list'?
        t_list          *elem;
        ^~~~~~
        va_list
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/sys/_types/_va_list.h:32:26: note: 'va_list' declared here
typedef __darwin_va_list va_list;
                         ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstdelone/main.c:61:2: error: unknown type name 't_list'; did you mean 'va_list'?
        t_list          *elem2;
        ^~~~~~
        va_list
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/sys/_types/_va_list.h:32:26: note: 'va_list' declared here
typedef __darwin_va_list va_list;
                         ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstdelone/main.c:62:2: error: unknown type name 't_list'; did you mean 'va_list'?
        t_list          *elem3;
        ^~~~~~
        va_list
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/sys/_types/_va_list.h:32:26: note: 'va_list' declared here
typedef __darwin_va_list va_list;
                         ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstdelone/main.c:63:2: error: unknown type name 't_list'; did you mean 'va_list'?
        t_list          *elem4;
        ^~~~~~
        va_list
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/sys/_types/_va_list.h:32:26: note: 'va_list' declared here
typedef __darwin_va_list va_list;
                         ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstdelone/main.c:76:6: error: member reference base type 'va_list' (aka '__builtin_va_list') is not a structure or union
        elem->next = elem2;
        ~~~~^ ~~~~
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstdelone/main.c:77:7: error: member reference base type 'va_list' (aka '__builtin_va_list') is not a structure or union
        elem2->next = elem3;
        ~~~~~^ ~~~~
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.

= ft_lstclear.c ================================================================
$> norminette ft_lstclear.c | grep -E '(Error|Warning)'
Error: 42 header not at top of the file
Error: file must end with a single empty line
Error (line 15): multiple empty lines
Norme check failed
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_lstclear.c main.c libft.a -o user_exe

/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstclear/main.c:18:22: error: unknown type name 't_list'
void    ft_print_result(t_list *elem)
                        ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstclear/main.c:36:1: error: unknown type name 't_list'
t_list  *ft_lstnewone(void const *content)
^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstclear/main.c:38:2: error: use of undeclared identifier 't_list'
        t_list  *elem;
        ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstclear/main.c:38:10: error: use of undeclared identifier 'elem'; did you mean 'else'?
        t_list  *elem;
                 ^~~~
                 else
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstclear/main.c:38:10: error: expected expression
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstclear/main.c:40:2: error: use of undeclared identifier 'elem'
        elem = (t_list *)malloc(sizeof(t_list));
        ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstclear/main.c:40:18: error: expected expression
        elem = (t_list *)malloc(sizeof(t_list));
                        ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstclear/main.c:40:10: error: use of undeclared identifier 't_list'
        elem = (t_list *)malloc(sizeof(t_list));
                ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstclear/main.c:41:7: error: use of undeclared identifier 'elem'
        if (!elem)
             ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstclear/main.c:45:3: error: use of undeclared identifier 'elem'
                elem->content = NULL;
                ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstclear/main.c:49:9: error: use of undeclared identifier 'elem'; did you mean 'enum'?
                if (!(elem->content = malloc(sizeof(*(elem->content)) * sizeof(content))))
                      ^~~~
                      enum
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstclear/main.c:49:9: error: expected expression
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstclear/main.c:51:9: error: use of undeclared identifier 'elem'
                        free(elem);
                             ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstclear/main.c:54:3: error: use of undeclared identifier 'elem'
                elem->content = memcpy(elem->content, content, sizeof(content));
                ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstclear/main.c:54:26: error: use of undeclared identifier 'elem'; did you mean 'else'?
                elem->content = memcpy(elem->content, content, sizeof(content));
                                       ^~~~
                                       else
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstclear/main.c:54:26: error: expected expression
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstclear/main.c:56:2: error: use of undeclared identifier 'elem'
        elem->next = NULL;
        ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstclear/main.c:57:10: error: use of undeclared identifier 'elem'; did you mean 'enum'?
        return (elem);
                ^~~~
                enum
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstclear/main.c:57:9: error: returning '<overloaded function type>' from a function with incompatible result type 'int *'
        return (elem);
               ^~~~~~
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.

= ft_lstadd_front.c ============================================================
$> norminette ft_lstadd_front.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_lstadd_front.c main.c libft.a -o user_exe

/Users/jaehpark/42Seoul/Libft/war2/dirlibft//ft_lstadd_front.c:15:22: error: unknown type name 't_list'
void    ft_lstadd_front(t_list **lst, t_list *new)
                        ^
/Users/jaehpark/42Seoul/Libft/war2/dirlibft//ft_lstadd_front.c:15:36: error: unknown type name 't_list'
void    ft_lstadd_front(t_list **lst, t_list *new)
                                      ^
2 errors generated.
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstadd_front/main.c:18:22: error: unknown type name 't_list'
void    ft_print_result(t_list *elem)
                        ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstadd_front/main.c:29:1: error: unknown type name 't_list'
t_list  *ft_lstnewone(void const *content)
^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstadd_front/main.c:31:2: error: use of undeclared identifier 't_list'
        t_list  *elem;
        ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstadd_front/main.c:31:10: error: use of undeclared identifier 'elem'; did you mean 'else'?
        t_list  *elem;
                 ^~~~
                 else
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstadd_front/main.c:31:10: error: expected expression
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstadd_front/main.c:33:2: error: use of undeclared identifier 'elem'
        elem = (t_list *)malloc(sizeof(t_list));
        ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstadd_front/main.c:33:18: error: expected expression
        elem = (t_list *)malloc(sizeof(t_list));
                        ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstadd_front/main.c:33:10: error: use of undeclared identifier 't_list'
        elem = (t_list *)malloc(sizeof(t_list));
                ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstadd_front/main.c:34:7: error: use of undeclared identifier 'elem'
        if (!elem)
             ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstadd_front/main.c:38:3: error: use of undeclared identifier 'elem'
                elem->content = NULL;
                ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstadd_front/main.c:42:9: error: use of undeclared identifier 'elem'; did you mean 'enum'?
                if (!(elem->content = malloc(sizeof(*(elem->content)) * sizeof(content))))
                      ^~~~
                      enum
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstadd_front/main.c:42:9: error: expected expression
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstadd_front/main.c:44:3: error: use of undeclared identifier 'elem'
                elem->content = memcpy(elem->content, content, sizeof(content));
                ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstadd_front/main.c:44:26: error: use of undeclared identifier 'elem'; did you mean 'else'?
                elem->content = memcpy(elem->content, content, sizeof(content));
                                       ^~~~
                                       else
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstadd_front/main.c:44:26: error: expected expression
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstadd_front/main.c:46:2: error: use of undeclared identifier 'elem'
        elem->next = NULL;
        ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstadd_front/main.c:47:10: error: use of undeclared identifier 'elem'; did you mean 'enum'?
        return (elem);
                ^~~~
                enum
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstadd_front/main.c:47:9: error: returning '<overloaded function type>' from a function with incompatible result type 'int *'
        return (elem);
               ^~~~~~
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstadd_front/main.c:52:2: error: use of undeclared identifier 't_list'
        t_list          *begin;
        ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.

= ft_lstadd_back.c =============================================================
$> norminette ft_lstadd_back.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_lstadd_back.c main.c libft.a -o user_exe

/Users/jaehpark/42Seoul/Libft/war2/dirlibft//ft_lstadd_back.c:15:21: error: unknown type name 't_list'
void    ft_lstadd_back(t_list **lst, t_list *new)
                       ^
/Users/jaehpark/42Seoul/Libft/war2/dirlibft//ft_lstadd_back.c:15:35: error: unknown type name 't_list'
void    ft_lstadd_back(t_list **lst, t_list *new)
                                     ^
2 errors generated.
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstadd_back/main.c:18:22: error: unknown type name 't_list'
void    ft_print_result(t_list *elem)
                        ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstadd_back/main.c:29:1: error: unknown type name 't_list'
t_list  *ft_lstnewone(void const *content)
^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstadd_back/main.c:31:2: error: use of undeclared identifier 't_list'
        t_list  *elem;
        ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstadd_back/main.c:31:10: error: use of undeclared identifier 'elem'; did you mean 'else'?
        t_list  *elem;
                 ^~~~
                 else
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstadd_back/main.c:31:10: error: expected expression
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstadd_back/main.c:33:2: error: use of undeclared identifier 'elem'
        elem = (t_list *)malloc(sizeof(t_list));
        ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstadd_back/main.c:33:18: error: expected expression
        elem = (t_list *)malloc(sizeof(t_list));
                        ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstadd_back/main.c:33:10: error: use of undeclared identifier 't_list'
        elem = (t_list *)malloc(sizeof(t_list));
                ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstadd_back/main.c:34:7: error: use of undeclared identifier 'elem'
        if (!elem)
             ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstadd_back/main.c:38:3: error: use of undeclared identifier 'elem'
                elem->content = NULL;
                ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstadd_back/main.c:42:9: error: use of undeclared identifier 'elem'; did you mean 'enum'?
                if (!(elem->content = malloc(sizeof(*(elem->content)) * sizeof(content))))
                      ^~~~
                      enum
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstadd_back/main.c:42:9: error: expected expression
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstadd_back/main.c:44:3: error: use of undeclared identifier 'elem'
                elem->content = memcpy(elem->content, content, sizeof(content));
                ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstadd_back/main.c:44:26: error: use of undeclared identifier 'elem'; did you mean 'else'?
                elem->content = memcpy(elem->content, content, sizeof(content));
                                       ^~~~
                                       else
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstadd_back/main.c:44:26: error: expected expression
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstadd_back/main.c:46:2: error: use of undeclared identifier 'elem'
        elem->next = NULL;
        ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstadd_back/main.c:47:10: error: use of undeclared identifier 'elem'; did you mean 'enum'?
        return (elem);
                ^~~~
                enum
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstadd_back/main.c:47:9: error: returning '<overloaded function type>' from a function with incompatible result type 'int *'
        return (elem);
               ^~~~~~
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstadd_back/main.c:52:2: error: use of undeclared identifier 't_list'
        t_list          *begin;
        ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.

= ft_lstsize.c =================================================================
$> norminette ft_lstsize.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_lstsize.c main.c libft.a -o user_exe

/Users/jaehpark/42Seoul/Libft/war2/dirlibft//ft_lstsize.c:15:16: error: unknown type name 't_list'
int     ft_lstsize(t_list *lst)
                   ^
1 error generated.
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstsize/main.c:18:1: error: unknown type name 't_list'
t_list  *ft_lstnewone(void const *content)
^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstsize/main.c:20:2: error: use of undeclared identifier 't_list'
        t_list  *elem;
        ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstsize/main.c:20:10: error: use of undeclared identifier 'elem'; did you mean 'else'?
        t_list  *elem;
                 ^~~~
                 else
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstsize/main.c:20:10: error: expected expression
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstsize/main.c:22:2: error: use of undeclared identifier 'elem'
        elem = (t_list *)malloc(sizeof(t_list));
        ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstsize/main.c:22:18: error: expected expression
        elem = (t_list *)malloc(sizeof(t_list));
                        ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstsize/main.c:22:10: error: use of undeclared identifier 't_list'
        elem = (t_list *)malloc(sizeof(t_list));
                ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstsize/main.c:23:7: error: use of undeclared identifier 'elem'
        if (!elem)
             ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstsize/main.c:27:3: error: use of undeclared identifier 'elem'
                elem->content = NULL;
                ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstsize/main.c:31:9: error: use of undeclared identifier 'elem'; did you mean 'enum'?
                if (!(elem->content = malloc(sizeof(*(elem->content)) * sizeof(content))))
                      ^~~~
                      enum
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstsize/main.c:31:9: error: expected expression
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstsize/main.c:33:3: error: use of undeclared identifier 'elem'
                elem->content = memcpy(elem->content, content, sizeof(content));
                ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstsize/main.c:33:26: error: use of undeclared identifier 'elem'; did you mean 'else'?
                elem->content = memcpy(elem->content, content, sizeof(content));
                                       ^~~~
                                       else
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstsize/main.c:33:26: error: expected expression
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstsize/main.c:35:2: error: use of undeclared identifier 'elem'
        elem->next = NULL;
        ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstsize/main.c:36:10: error: use of undeclared identifier 'elem'; did you mean 'enum'?
        return (elem);
                ^~~~
                enum
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstsize/main.c:36:9: error: returning '<overloaded function type>' from a function with incompatible result type 'int *'
        return (elem);
               ^~~~~~
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstsize/main.c:41:2: error: use of undeclared identifier 't_list'
        t_list          *elem;
        ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstsize/main.c:41:11: error: use of undeclared identifier 'elem'; did you mean 'else'?
        t_list          *elem;
                         ^~~~
                         else
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.

= ft_lstiter.c =================================================================
Nothing turned in

= ft_lstmap.c ==================================================================
Nothing turned in

= ft_lstlast.c =================================================================
$> norminette ft_lstlast.c | grep -E '(Error|Warning)'
Warning: /Users/jaehpark/42Seoul/Libft/war2/..//ft_lstlast.c may not compile or is invalid for some reasons.
Norme check failed
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_lstlast.c main.c libft.a -o user_exe

/Users/jaehpark/42Seoul/Libft/war2/dirlibft//ft_lstlast.c:15:1: error: unknown type name 't_list'
t_list  *ft_lstlast(t_list *lst);
^
/Users/jaehpark/42Seoul/Libft/war2/dirlibft//ft_lstlast.c:15:20: error: unknown type name 't_list'
t_list  *ft_lstlast(t_list *lst);
                    ^
/Users/jaehpark/42Seoul/Libft/war2/dirlibft//ft_lstlast.c:16:1: error: expected identifier or '('
{
^
3 errors generated.
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstlast/main.c:18:1: error: unknown type name 't_list'
t_list  *ft_lstnewone(void const *content)
^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstlast/main.c:20:2: error: use of undeclared identifier 't_list'
        t_list  *elem;
        ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstlast/main.c:20:10: error: use of undeclared identifier 'elem'; did you mean 'else'?
        t_list  *elem;
                 ^~~~
                 else
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstlast/main.c:20:10: error: expected expression
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstlast/main.c:22:2: error: use of undeclared identifier 'elem'
        elem = (t_list *)malloc(sizeof(t_list));
        ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstlast/main.c:22:18: error: expected expression
        elem = (t_list *)malloc(sizeof(t_list));
                        ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstlast/main.c:22:10: error: use of undeclared identifier 't_list'
        elem = (t_list *)malloc(sizeof(t_list));
                ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstlast/main.c:23:7: error: use of undeclared identifier 'elem'
        if (!elem)
             ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstlast/main.c:27:3: error: use of undeclared identifier 'elem'
                elem->content = NULL;
                ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstlast/main.c:31:9: error: use of undeclared identifier 'elem'; did you mean 'enum'?
                if (!(elem->content = malloc(sizeof(*(elem->content)) * sizeof(content))))
                      ^~~~
                      enum
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstlast/main.c:31:9: error: expected expression
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstlast/main.c:33:3: error: use of undeclared identifier 'elem'
                elem->content = memcpy(elem->content, content, sizeof(content));
                ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstlast/main.c:33:26: error: use of undeclared identifier 'elem'; did you mean 'else'?
                elem->content = memcpy(elem->content, content, sizeof(content));
                                       ^~~~
                                       else
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstlast/main.c:33:26: error: expected expression
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstlast/main.c:35:2: error: use of undeclared identifier 'elem'
        elem->next = NULL;
        ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstlast/main.c:36:10: error: use of undeclared identifier 'elem'; did you mean 'enum'?
        return (elem);
                ^~~~
                enum
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstlast/main.c:36:9: error: returning '<overloaded function type>' from a function with incompatible result type 'int *'
        return (elem);
               ^~~~~~
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstlast/main.c:43:2: error: use of undeclared identifier 't_list'
        t_list          *val;
        ^
/Users/jaehpark/42Seoul/Libft/war2/tests/Bonus_functions/ft_lstlast/main.c:43:11: error: use of undeclared identifier 'val'
        t_list          *val;
                         ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.
